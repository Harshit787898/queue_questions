class MyCircularQueue {
    int q[],f,r;
    public MyCircularQueue(int k) {
        q=new int[k];
        f=-1;
        r=-1;
    }
    
    public boolean enQueue(int value) {
        if(isFull())
        return false;
        else{
            if(r==-1)
            {
                f=0;
                r=0;
                q[r]=value;
            }
            else{
                r=(r+1)%q.length;
                q[r]=value;
            }
            return true;
        }
    }
    
    public boolean deQueue() {
        if(isEmpty())
        return false;
        else{
            if(f==r)
            {
                f=-1;
                r=-1;
            }
            else{
                f=(f+1)%q.length;
            }
            return true;
        }
    }
    
    public int Front() {
        if(f!=-1)
        return q[f];
        else
        return -1;
    }
    
    public int Rear() {
        if(r!=-1)
        return q[r];
        else
        return -1;
    }
    
    public boolean isEmpty() {
        if(f==-1)
        return true;
        else 
        return false;
    }
    
    public boolean isFull() {
        if(f==(r+1)%q.length)
        return true;
        else
        return false;
    }
}
